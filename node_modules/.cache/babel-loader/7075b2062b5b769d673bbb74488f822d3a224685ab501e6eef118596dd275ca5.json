{"ast":null,"code":"var _jsxFileName = \"/Users/carmencouzyn/Projects/image-twin/src/components/ImageEditor.jsx\";\nimport React from 'react';\nimport BBox from './BBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ImageEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.bBoxes = [];\n    this.formData = {};\n    this.message = \"\";\n    this.sizeHint = \"\";\n    this.imageRef = null;\n    this.setImageRef = element => {\n      this.imageRef = element;\n    };\n\n    // Dynamically syncs FormData with input values\n    this.handleChange = e => {\n      console.log('handleChange', e.target.id, e.target.value);\n      this.formData[e.target.id] = e.target.value;\n      console.log(this.formData);\n    };\n\n    // Adds a Box to the Array and Resets the Form\n    this.handleSumbit = e => {\n      e.preventDefault();\n\n      // Check if Integers\n      try {\n        Object.keys(this.FormData).forEach(function (key, value) {\n          this.forEach[key] = parseInt(value);\n        });\n      } catch {\n        this.message = 'Please enter valid numbers.';\n      }\n      const newBBox = {\n        xPos: this.formData.xPos / this.imageRef.current.clientWidth * 100,\n        yPos: this.formData.yPos / this.imageRef.current.clientHeight * 100,\n        width: this.formData.width / this.imageRef.current.clientWidth * 100,\n        height: this.formData.height / this.imageRef.current.clientHeight * 100\n      };\n      console.log();\n\n      // Check if > 0 \n\n      if (this.formData.width <= 0 || this.formData.height <= 0) {\n        this.message = 'Please add a width and height';\n      }\n\n      // Check if within image bounds \n      else if (newBBox.xPos + newBBox.width > 100 || newBBox.yPos + newBBox.height > 100) {\n        this.message = 'Your box overflows the image. Please draw a box that fits into ' + this.imageRef.current.clientWidth + 'px x ' + this.imageRef.current.clientHeight + 'px.';\n      } else {\n        console.log(\"new Box: \", newBBox);\n        this.bBoxes.push(newBBox);\n        this.formData = {\n          xPos: 0,\n          yPos: 0,\n          width: 0,\n          height: 0\n        };\n        this.message = 'Box added';\n      }\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: this.props.index,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          ref: this.setImageRef,\n          src: this.props.source,\n          alt: 'the uploaded image: ' + (this.props.index + 1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), this.bBoxes.map((value, index) => {\n          return /*#__PURE__*/_jsxDEV(BBox, {\n            props: value\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 33\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"hint-message\",\n          children: this.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSumbit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"xPos\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \" X \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"xPos\",\n                value: this.formData.xPos,\n                onChange: this.handleChange,\n                placeholder: \"0\",\n                type: \"number\",\n                min: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"yPos\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \" Y \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"yPos\",\n                value: this.formData.yPos,\n                onChange: this.handleChange,\n                placeholder: \"0\",\n                type: \"number\",\n                min: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"width\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \" Width \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"width\",\n                value: this.formData.width,\n                onChange: this.handleChange,\n                placeholder: \"0\",\n                type: \"number\",\n                min: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"height\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \" Height \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"height\",\n                value: this.formData.height,\n                onChange: this.handleChange,\n                placeholder: \"0\",\n                type: \"number\",\n                min: \"0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default ImageEditor;","map":{"version":3,"names":["React","BBox","ImageEditor","Component","constructor","props","bBoxes","formData","message","sizeHint","imageRef","setImageRef","element","handleChange","e","console","log","target","id","value","handleSumbit","preventDefault","Object","keys","FormData","forEach","key","parseInt","newBBox","xPos","current","clientWidth","yPos","clientHeight","width","height","push","render","index","source","map"],"sources":["/Users/carmencouzyn/Projects/image-twin/src/components/ImageEditor.jsx"],"sourcesContent":["import React from 'react'\nimport BBox from './BBox'\n\nclass ImageEditor extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.bBoxes = []\n        this.formData = { }\n        this.message = \"\"\n        this.sizeHint = \"\"\n\n        this.imageRef = null\n\n\n        this.setImageRef = element => {\n            this.imageRef = element\n        }\n\n        // Dynamically syncs FormData with input values\n        this.handleChange = (e) => {\n            console.log('handleChange', e.target.id, e.target.value)\n            this.formData[e.target.id] = e.target.value\n            console.log(this.formData)\n        }\n\n\n        // Adds a Box to the Array and Resets the Form\n        this.handleSumbit = (e) => {\n            e.preventDefault()\n\n            // Check if Integers\n            try {\n                Object.keys(this.FormData).forEach(function (key, value) {\n                    this.forEach[key] = parseInt(value)\n                })\n            }\n            catch {\n                this.message = 'Please enter valid numbers.'\n            }\n\n            const newBBox = {\n                xPos: (this.formData.xPos / this.imageRef.current.clientWidth) * 100,\n                yPos: (this.formData.yPos / this.imageRef.current.clientHeight) * 100,\n                width: (this.formData.width / this.imageRef.current.clientWidth) * 100,\n                height: (this.formData.height / this.imageRef.current.clientHeight) * 100\n            }\n\n            console.log()\n\n            // Check if > 0 \n\n\n            if (this.formData.width <= 0 || this.formData.height <= 0) {\n                this.message = 'Please add a width and height'\n\n            }\n\n            // Check if within image bounds \n            else if (newBBox.xPos + newBBox.width > 100\n                || newBBox.yPos + newBBox.height > 100) {\n                this.message = 'Your box overflows the image. Please draw a box that fits into ' + this.imageRef.current.clientWidth + 'px x ' + this.imageRef.current.clientHeight + 'px.'\n\n            }\n            else {\n                console.log(\"new Box: \", newBBox)\n                this.bBoxes.push(newBBox)\n                this.formData = { xPos: 0, yPos: 0, width: 0, height: 0 }\n                this.message = 'Box added'\n            }\n\n        }\n\n\n\n    }\n\n    render() {\n        return (\n            <div id={this.props.index}>\n\n                { /* ----------- IMAGE AND BOXES ----------- */}\n\n                <div className=\"image-container\">\n                    <img ref={this.setImageRef} src={this.props.source} alt={'the uploaded image: ' + (this.props.index + 1)} />\n                    {\n                        this.bBoxes.map((value, index) => {\n                            return (\n                                <BBox key={index} props={value} />\n                            )\n                        })\n                    }\n                </div>\n                <div className=\"editor\">\n\n\n\n                    { /* ----------- FORM AREA ----------- */}\n\n                    <p className=\"hint-message\">{this.message}</p>\n\n                    <form onSubmit={this.handleSumbit}>\n                        <div className=\"input-group\">\n                            <label htmlFor=\"xPos\">\n                                <span> X </span>\n                                <input id=\"xPos\" value={this.formData.xPos} onChange={this.handleChange} placeholder=\"0\" type=\"number\" min=\"0\"></input>\n                            </label>\n                            <label htmlFor=\"yPos\">\n                                <span> Y </span>\n                                <input id=\"yPos\" value={this.formData.yPos} onChange={this.handleChange} placeholder=\"0\" type=\"number\" min=\"0\"></input>\n                            </label>\n                        </div>\n                        <div className=\"input-group\">\n                            <label htmlFor=\"width\">\n                                <span> Width </span>\n                                <input id=\"width\" value={this.formData.width} onChange={this.handleChange} placeholder=\"0\" type=\"number\" min=\"0\"></input>\n                            </label>\n                            <label htmlFor=\"height\">\n                                <span> Height </span>\n                                <input id=\"height\" value={this.formData.height} onChange={this.handleChange} placeholder=\"0\" type=\"number\" min=\"0\"></input>\n                            </label>\n                        </div>\n                        <input type=\"submit\" />\n                    </form>\n                    <div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default ImageEditor"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}